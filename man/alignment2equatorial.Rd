% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/general.R
\name{alignment2equatorial}
\alias{alignment2equatorial}
\title{Calculate azimuth and altitude from geographical coordinates of origin and foresight}
\usage{
alignment2equatorial(geographic_latitude.origin,
  geographic_longitude.origin, geographic_altitude.origin,
  geographic_latitude.foresight, geographic_longitude.foresight,
  geographic_altitude.foresight)
}
\arguments{
\item{geographic_latitude.origin}{Geographical latitude of the origin in degrees}

\item{geographic_longitude.origin}{Geographical longitude of the origin in degrees}

\item{geographic_altitude.origin}{Geographical altitude of the origin in meters}

\item{geographic_latitude.foresight}{Geographical latitude of the foresight in degrees}

\item{geographic_longitude.foresight}{Geographical longitude of the foresight in degrees}

\item{geographic_altitude.foresight}{Geographical altitude of the foresight in meters}
}
\value{
Horizontal coordinates
\itemize{
  \item azimuth Azimuth in degrees
  \item altitude Altitude in hour angle
}
}
\description{
Calculate azimuth and altitude from geographical coordinates of origin and foresight
}
\examples{
geographic_latitude.origin<-c(str2degrees("42\\u00b026'58.00\\u0022N"),
                              str2degrees("42\\u00b026'58.00\\u0022N"))
geographic_longitude.origin<-c(str2degrees("06\\u00b003'54.00\\u0022W"),
                               str2degrees("06\\u00b003'54.00\\u0022W"))
geographic_altitude.origin<-c(850,850)
geographic_latitude.foresight<-c(str2degrees("42\\u00b019'43.50\\u0022N"),
                                 str2degrees("42\\u00b020'45.00\\u0022N"))
geographic_longitude.foresight<-c(str2degrees("06\\u00b021'51.00\\u0022W"),
                                  str2degrees("06\\u00b023'37.00\\u0022W"))
geographic_altitude.foresight<-c(2047,2183)

do.call(alignment2equatorial,
        data.frame(geographic_latitude.origin,
           geographic_longitude.origin,
           geographic_altitude.origin,
           geographic_latitude.foresight,
           geographic_longitude.foresight,
           geographic_altitude.foresight))
}
